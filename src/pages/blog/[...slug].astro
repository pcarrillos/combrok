---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/layout/Header.astro';
import Footer from '@/components/layout/Footer.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return data.status === 'published' && !data.noindex;
  });
  
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get related posts
const allPosts = await getCollection('posts', ({ data }) => {
  return data.status === 'published' && !data.noindex;
});

const relatedPosts = allPosts
  .filter(p => 
    p.slug !== post.slug && 
    (p.data.category === post.data.category || 
     p.data.tags.some(tag => post.data.tags.includes(tag)))
  )
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 3);

// Get author
const authors = await getCollection('authors');
const author = authors.find(a => a.id === post.data.author);

// Generate structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": post.data.title,
  "description": post.data.description,
  "image": new URL(post.data.image.src.src, Astro.site),
  "author": {
    "@type": "Person",
    "name": author?.data.name || post.data.author
  },
  "publisher": {
    "@type": "Organization", 
    "name": "Comunidad Broker",
    "logo": {
      "@type": "ImageObject",
      "url": new URL('/logo.png', Astro.site)
    }
  },
  "datePublished": post.data.publishDate.toISOString(),
  "dateModified": (post.data.updateDate || post.data.publishDate).toISOString(),
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": new URL(`/blog/${post.slug}`, Astro.site)
  }
};

const categoryNames = {
  noticias: 'Noticias',
  analisis: 'Análisis', 
  educacion: 'Educación',
  alertas: 'Alertas'
};
---

<BaseLayout 
  title={post.data.seoTitle || post.data.title}
  description={post.data.seoDescription || post.data.description}
  image={post.data.ogImage || post.data.image.src.src}
  canonical={post.data.canonical}
  noindex={post.data.noindex}
  type="article"
>
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  
  <Header />
  
  <main id="main-content">
    <!-- Article Header -->
    <article class="max-w-4xl mx-auto">
      <header class="px-6 py-12 text-center">
        <!-- Breadcrumb -->
        <nav class="mb-8" aria-label="Breadcrumb">
          <ol class="flex items-center justify-center space-x-2 text-sm text-gray-600">
            <li><a href="/" class="hover:text-blue-600">Inicio</a></li>
            <li class="flex items-center">
              <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
              <a href="/blog" class="hover:text-blue-600">Blog</a>
            </li>
            <li class="flex items-center">
              <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
              <span class="text-gray-400" aria-current="page">{categoryNames[post.data.category]}</span>
            </li>
          </ol>
        </nav>

        <!-- Category -->
        <div class="mb-4">
          <a 
            href={`/categoria/${post.data.category}`}
            class="inline-flex items-center bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium hover:bg-blue-200 transition-colors"
          >
            {categoryNames[post.data.category]}
          </a>
        </div>

        <!-- Title -->
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {post.data.title}
        </h1>

        <!-- Meta -->
        <div class="flex flex-col md:flex-row items-center justify-center gap-4 text-gray-600 mb-8">
          {author && (
            <div class="flex items-center gap-2">
              <img 
                src={author.data.avatar.src} 
                alt={author.data.name}
                class="w-8 h-8 rounded-full"
              />
              <span class="font-medium">{author.data.name}</span>
            </div>
          )}
          <div class="flex items-center gap-4 text-sm">
            <time datetime={post.data.publishDate.toISOString()}>
              {post.data.publishDate.toLocaleDateString('es-ES', {
                year: 'numeric',
                month: 'long', 
                day: 'numeric'
              })}
            </time>
            <span>•</span>
            <span>{post.data.readingTime} min de lectura</span>
            {post.data.updateDate && (
              <>
                <span>•</span>
                <span class="text-xs">
                  Actualizado: {post.data.updateDate.toLocaleDateString('es-ES')}
                </span>
              </>
            )}
          </div>
        </div>

        <!-- Featured Image -->
        <div class="aspect-video rounded-xl overflow-hidden mb-8">
          <img 
            src={post.data.image.src.src} 
            alt={post.data.image.alt}
            class="w-full h-full object-cover"
          />
          {post.data.image.caption && (
            <p class="text-sm text-gray-600 mt-2 text-center">
              {post.data.image.caption}
              {post.data.image.credit && (
                <span class="block text-xs text-gray-500 mt-1">
                  Crédito: {post.data.image.credit}
                </span>
              )}
            </p>
          )}
        </div>
      </header>

      <!-- Article Content -->
      <div class="px-6">
        <div class="prose prose-lg max-w-none">
          <!-- Warnings -->
          {post.data.warnings && post.data.warnings.length > 0 && (
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-8">
              <div class="flex">
                <div class="flex-shrink-0">
                  <span class="text-yellow-400 text-lg">⚠️</span>
                </div>
                <div class="ml-3">
                  <h3 class="text-sm font-bold text-yellow-800">Advertencias Importantes</h3>
                  <ul class="text-sm text-yellow-700 mt-1">
                    {post.data.warnings.map(warning => (
                      <li>• {warning}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          )}

          <!-- Content -->
          <Content />

          <!-- Disclaimer -->
          {post.data.disclaimer && (
            <div class="bg-gray-50 border border-gray-200 rounded-lg p-4 mt-8">
              <h4 class="font-bold text-gray-900 mb-2">Aviso Legal</h4>
              <p class="text-sm text-gray-700">{post.data.disclaimer}</p>
            </div>
          )}
        </div>

        <!-- Tags -->
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="mt-12 pt-8 border-t border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Etiquetas</h3>
            <div class="flex flex-wrap gap-2">
              {post.data.tags.map(tag => (
                <a 
                  href={`/tag/${tag}`}
                  class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm hover:bg-gray-200 transition-colors"
                >
                  #{tag}
                </a>
              ))}
            </div>
          </div>
        )}

        <!-- Sources -->
        {post.data.sources && post.data.sources.length > 0 && (
          <div class="mt-8 pt-8 border-t border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Fuentes</h3>
            <ol class="space-y-2 text-sm">
              {post.data.sources.map((source, index) => (
                <li>
                  {index + 1}. <a 
                    href={source.url} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="text-blue-600 hover:text-blue-800"
                  >
                    {source.name}
                  </a>
                  <span class="text-gray-500 ml-2">
                    ({source.date.toLocaleDateString('es-ES')})
                  </span>
                </li>
              ))}
            </ol>
          </div>
        )}
      </div>
    </article>

    <!-- Related Posts -->
    {relatedPosts.length > 0 && (
      <section class="max-w-6xl mx-auto px-6 py-16">
        <h2 class="text-2xl font-bold text-gray-900 mb-8">Artículos Relacionados</h2>
        <div class="grid md:grid-cols-3 gap-8">
          {relatedPosts.map(relatedPost => (
            <article class="group">
              <div class="aspect-video bg-gray-100 rounded-lg overflow-hidden mb-4">
                <img 
                  src={relatedPost.data.image.src.src} 
                  alt={relatedPost.data.image.alt}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
              </div>
              <div class="space-y-2">
                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded font-medium">
                  {categoryNames[relatedPost.data.category]}
                </span>
                <h3 class="text-lg font-bold text-gray-900 line-clamp-2">
                  <a href={`/blog/${relatedPost.slug}`} class="hover:text-blue-600 transition-colors">
                    {relatedPost.data.title}
                  </a>
                </h3>
                <p class="text-gray-600 text-sm line-clamp-2">
                  {relatedPost.data.description}
                </p>
                <div class="text-xs text-gray-500">
                  {relatedPost.data.publishDate.toLocaleDateString('es-ES')} • 
                  {relatedPost.data.readingTime} min lectura
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    )}

    <!-- Newsletter CTA -->
    <section class="bg-blue-50 py-16">
      <div class="max-w-2xl mx-auto text-center px-6">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">
          ¿Te gustó este artículo?
        </h2>
        <p class="text-gray-600 mb-8">
          Suscríbete a nuestro newsletter para recibir más análisis como este
        </p>
        <form class="flex flex-col sm:flex-row gap-4 max-w-md mx-auto">
          <input 
            type="email" 
            placeholder="Tu email"
            class="flex-1 px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            required
          />
          <button 
            type="submit"
            class="bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors"
          >
            Suscribirse
          </button>
        </form>
      </div>
    </section>
  </main>
  
  <Footer />
</BaseLayout>

<style>
  .prose {
    color: #374151;
    line-height: 1.75;
  }
  
  .prose h2 {
    font-size: 1.875rem;
    font-weight: 700;
    color: #111827;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose h3 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .prose p {
    margin-bottom: 1.5rem;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #e5e7eb;
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: #6b7280;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
    color: inherit;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>