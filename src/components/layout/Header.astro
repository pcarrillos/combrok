---
import { SITE } from '@/utils/constants';
import Navigation from './Navigation.astro';
---

<header role="banner" class="bg-white border-b border-gray-200 sticky top-0 z-50">
  <div class="container">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a 
          href="/" 
          class="flex items-center space-x-2 text-xl font-bold text-gray-900 hover:text-blue-600 transition-colors"
          aria-label="Ir a la página principal"
        >
          <svg width="32" height="32" viewBox="0 0 32 32" class="text-blue-600">
            <path fill="currentColor" d="M16 2L3 9v14l13 7 13-7V9L16 2zm0 2.5L25.5 10 16 15.5 6.5 10 16 4.5zM5 11.5l10 5.5v11L5 22.5v-11zm22 0v11L17 28V17l10-5.5z"/>
          </svg>
          <span>Comunidad Broker</span>
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <nav id="main-navigation" role="navigation" aria-label="Navegación principal" class="hidden md:block">
        <Navigation />
      </nav>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        type="button"
        class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-blue-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500"
        aria-controls="mobile-menu"
        aria-expanded="false"
        aria-label="Abrir menú de navegación"
      >
        <span class="sr-only">Abrir menú principal</span>
        <!-- Hamburger icon -->
        <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <!-- Close icon (hidden by default) -->
        <svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
        <Navigation mobile={true} />
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');
  const icons = button?.querySelectorAll('svg');
  
  button?.addEventListener('click', () => {
    const isExpanded = button.getAttribute('aria-expanded') === 'true';
    
    button.setAttribute('aria-expanded', (!isExpanded).toString());
    menu?.classList.toggle('hidden');
    
    // Toggle icons
    icons?.forEach(icon => icon.classList.toggle('hidden'));
  });
  
  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!button?.contains(e.target as Node) && !menu?.contains(e.target as Node)) {
      button?.setAttribute('aria-expanded', 'false');
      menu?.classList.add('hidden');
      icons?.[0]?.classList.remove('hidden');
      icons?.[1]?.classList.add('hidden');
    }
  });
  
  // Close mobile menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && button?.getAttribute('aria-expanded') === 'true') {
      button.setAttribute('aria-expanded', 'false');
      menu?.classList.add('hidden');
      icons?.[0]?.classList.remove('hidden');
      icons?.[1]?.classList.add('hidden');
      button.focus();
    }
  });
</script>